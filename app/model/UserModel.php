<?php

namespace app\model;

use app\common\CacheKey;
use think\facade\Cache;

class UserModel extends BaseModel
{
    public $table = 'users';


    public function setInsert($data)
    {
        $data['guid'] = createGuid();
        return parent::setInsert($data); // TODO: Change the autogenerated stub
    }

    //获取用户信息时候保存到redis
    public function getDataOne($map,$field = '*'){
        $find =  $this->where($map)->field($field)->find();
        if (empty($find)){
            return [];
        }
        $find = $find->toArray();
       //用户数据存在生成 token
        //储存到 redis
        $redis = [
            'tg_id'=>$find['tg_id'],
            'id'=>$find['id'],
//            'guid'=>$find['guid'],
//            'nickname'=>$find['nickname'],
            'username'=>$find['username'],
//            'status'=>$find['status'],
//            'type'=>$find['type'],
            'time'=>date('ymdHis'),
        ];
        $find['token'] = generateToken($redis);
        if (!Cache::get(sprintf(CacheKey::REDIS_TG_USER_INFO,$find['tg_id']))){
            Cache::set(sprintf(CacheKey::REDIS_TG_USER_INFO,$find['tg_id']),json_encode($find),CacheKey::REDIS_USER_INFO_TTL);
        }
        return $find;
    }

    public function incOrDec($id, $int)
    {
        if ($int > 0) {
            return $this->where('id', $id)->inc('balance', $int)->update();
        }
        return $this->where('id', $id)->dec('balance', $int)->update();
    }

    public function dec($id, $int)
    {
        return $this->where('id', $id)->dec('balance', $int)->update();
    }

    //$decBalance 用户余额需要减少多少，用户冻结多少金额
    public function userFreezeRedBalance($id,$decBalance,$freezeBalance){
        //用户领取红包，冻结金额操作
    }
}
